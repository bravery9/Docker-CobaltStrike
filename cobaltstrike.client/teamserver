#!/bin/bash
#
# Start Cobalt Strike Team Server
#

# make pretty looking messages (thanks Carlos)

#################

clear
echo -e "\033[1;31m __  __  ____                      \033[0m"
echo -e "\033[1;32m \ \/ / |  _ \   ___    ___    ___  \033[0m"
echo -e "\033[1;33m  \  /  | |_) | / __|  / _ \  / __| \033[0m"
echo -e "\033[1;34m  /  \  |  _ <  \__ \ |  __/ | (__  \033[0m"
echo -e "\033[1;35m /_/\_\ |_| \_\ |___/  \___|  \___| \n\033[0m"
echo -e "\033[1;31m Thank's ZER0DAY LAB \n\033[0m"
echo -e "\033[1;32m [ help ] \n\033[0m"
echo $passwd
echo 

#################

function print_good () {
    echo -e "\x1B[01;32m[+]\x1B[0m $1"
}

function print_error () {
    echo -e "\x1B[01;31m[-]\x1B[0m $1"
}

function print_info () {
    echo -e "\x1B[01;34m[*]\x1B[0m $1"
}

# check that we're r00t
if [ $UID -ne 0 ]; then
	print_error "Superuser privileges are required to run the team server"
	exit
fi

# check if java is available...
if [ $(command -v java) ]; then
	true
else
	print_error "java is not in \$PATH"
	echo "    is Java installed?"
	exit
fi

# check if keytool is available...
if [ $(command -v keytool) ]; then
	true
else
	print_error "keytool is not in \$PATH"
	echo "    install the Java Developer Kit"
	exit
fi

# generate a certificate
	# naturally you're welcome to replace this step with your own permanent certificate.
	# just make sure you pass -Djavax.net.ssl.keyStore="/path/to/whatever" and
	# -Djavax.net.ssl.keyStorePassword="password" to java. This is used for setting up
	# an SSL server socket. Also, the SHA-1 digest of the first certificate in the store
	# is printed so users may have a chance to verify they're not being owned.
if [ -e ./cobaltstrike.store ]; then
	print_info "Will use existing X509 certificate and keystore (for SSL)"
else
	print_info "Generating X509 certificate and keystore (for SSL)"
	IFS_BACKUP=$IFS
	IFS=$(echo -en "\n\b")
	keytool -keystore /cobaltstrike/cobaltstrike.store -storepass $passwd -keypass $passwd -genkey -keyalg RSA -alias "$aliasname" -dname "$dname"
	IFS=$IFS_BACKUP
fi

# start the team server.
# java -XX:ParallelGCThreads=4 -Dcobaltstrike.server_port=50050 -Djavax.net.ssl.keyStore=./cobaltstrike.store -Djavax.net.ssl.keyStorePassword=123456 -server -XX:+AggressiveHeap -XX:+UseParallelGC -Xms512M -Xmx1024M -classpath ./cobaltstrike.jar server.TeamServer $*


# Cloud function
# java -XX:ParallelGCThreads=4 -Dcobaltstrike.server_port=$server_port -Djavax.net.ssl.keyStore=/cobaltstrike/cobaltstrike.store -Djavax.net.ssl.keyStorePassword=$passwd -server -XX:+AggressiveHeap -XX:+UseParallelGC -Xms512M -Xmx1024M -classpath /cobaltstrike/cobaltstrike.jar:. -Duser.language=en server.TeamServer $server_ip $passwd /cobaltstrike/cs.profile &

java -XX:ParallelGCThreads=4 -Dcobaltstrike.server_port=$server_port -Djavax.net.ssl.keyStore=/cobaltstrike/cobaltstrike.store -Djavax.net.ssl.keyStorePassword=$passwd -server -XX:+AggressiveHeap -XX:+UseParallelGC -Xms512M -Xmx1024M -classpath /cobaltstrike/cobaltstrike.jar:. -Duser.language=en server.TeamServer $server_ip $passwd

# DingTalk
# sleep 10 
# java -XX:ParallelGCThreads=4 -XX:+AggressiveHeap -XX:+UseParallelGC -classpath /cobaltstrike/cobaltstrike.jar aggressor.headless.Start 127.0.0.1 $server_port Dingtalk $passwd /cobaltstrike/dingding.cna &
# /bin/bash
